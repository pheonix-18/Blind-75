/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    void levelOrderHelper(List<List<Integer>> traversalResult, TreeNode root, int depth){
        if(root == null)
            return;
        if(traversalResult.size() <= depth){
            traversalResult.add(new ArrayList<Integer>());
        }
        traversalResult.get(depth).add(root.val);
        levelOrderHelper(traversalResult, root.left, depth + 1);
        levelOrderHelper(traversalResult, root.right, depth + 1);
    }
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> traversalResult = new ArrayList<>();
        levelOrderHelper(traversalResult, root, 0);
        return traversalResult;
    }
}
